#!/usr/bin/python3
from users import User
from credentials import Credentials


def create_user(name, username, password):
    """Function that creates a new user account on the password locker application"""
    new_user = User(name, username, password)
    return new_user

def save_user(user):
    """Method to save a new user to the application"""
    User.save_user_account(user)

def verify_user(username, password):
    check_user = User.check_user(username, password)
    return check_user

def gen_password(ln):
    return Credentials.gen_password(ln)

def create_creds(platform_name, username, password):
    new_creds = Credentials(platform_name, username, password)
    return new_creds

def save_creds(user_creds):
    Credentials.save_credentials(user_creds)
    
def display_creds(username):
    return Credentials.display_credentials(username)


def password_locker():
    print("\n")
    print("Welcome to Password Locker")
    while True:
        print("\n")
        print(
            "Choose an option to continue : \n11 : Create Password Locker account\n22 : Log In to an existing account "
            "\n33 : Exit")
        option_code = input("Enter option: ").lower().strip()
        if option_code == "11":
            print("Creating new account \n")
            name = input("Enter your name: ").strip()
            print(name)
            username = input("Enter your preferred username: ").strip()
            print(name + " " + username)
            while True:
                print("\nTo type your password, enter 'type'. \nTo get an autogenerated password enter 'auto' ")
                password_option = input("Choose option: ").lower().strip()
                if password_option == "type":
                    password = input("Enter your new password: ")
                    conf_password = input("confirm your password: ")

                    if password == conf_password:
                        print(f"Password confirmed successfully\n")
                        print(f"Account for {username} created successfully")
                        # while True:
                        #     print(f"\nHello {username}! What to do you want to do today?")
                        break
                    else:
                        print("Passwords do not match")
                        print("Please try again")
                elif password_option == 'auto':
                    password = Credentials.gen_password(12)
                    print(f"Your password is {password}")
                    print(f"Account for {username} created successfully")
                    
                else:
                    "Invalid password option"
                    break
        elif option_code == "22":
            print("=" *60)
            print("Enter username and password to log in:\n")
            username = input("Enter username: ")
            password = input("Enter password: ")

            # user = verify_user(username, password)
            print(username)

            if username == username:
                print("=" *60)
                print(f"{username} logged in successfully")
                while True:
                    print("-" *60)
                    print("\n")
                    print(
                        "These options will help you navigate :\nsave: Save new credentials. \ndview: Display "
                        "all saved credentials. \nfind: Find a saved credential. \ndelete: Delete a saved credential. "
                        "\nlogout: Log out of your account. \nquit: Exit the password locker application\n")
                    print("-" *60)
                    
                    option = input("Enter Option: ").lower().strip()
                    if option == "save":
                        print("Enter credential details to save")
                        platform_name = input("Site name: ").strip()
                        platform_username = input("username: ").strip()
                        while True:
                            print("\nTo type your password, enter 'type'. \nTo get an autogenerated password enter "
                                  "'auto' ")
                            password_option = input("Choose option: ").lower().strip()
                            if password_option == "type":
                                password = input("Enter your new password: ")
                                conf_password = input("confirm your password: ")

                                if password == conf_password:
                                    print(f"Password confirmed successfully\n")
                                    # print(f"New account for {username} created successfully")
                                    # while True:
                                    #     print(f"\nHello {username}! What to do you want to do today?")
                                    break
                                else:
                                    print("Passwords do not match")
                                    print("Please try again")
                            elif password_option == 'auto':
                                password = Credentials.gen_password(12)
                                print(f"Your password is {password}")
                                print(f"{platform_name} account for {username} created successfully")
                                break
                            else:
                                "Invalid Option. Retry"

                        save_creds(create_creds(platform_name, platform_username, password))
                        print(f"{platform_name} account for username: {platform_username},password {password} added ")
                        
                    elif option == "view":
                        pass
                    
                    elif option == "find":
                        pass
                    
                    elif option == "delete":
                        pass
                    
                    elif option == "exit":
                        print("=" *60)
                        print(f"{username} logged out ")
                        break
                        

        elif option_code == "33":
            print("Exited. Have a good day.")
            break

        else:
            print("Invalid Option Code.")
            print("Retry")


if __name__ == '__main__':
    password_locker()
